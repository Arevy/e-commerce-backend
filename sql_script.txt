-- Schema bootstrap for the e-commerce backend.
-- Run the statements below using an Oracle client connected as a user with the
-- required privileges. Re-running the script is idempotent: it drops any
-- existing tables before recreating the schema and reseeding data.

SET DEFINE OFF;

-- Helper block to drop a table if it exists
DECLARE
  PROCEDURE drop_table(p_table_name IN VARCHAR2) IS
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE ' || p_table_name || ' CASCADE CONSTRAINTS PURGE';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
        RAISE;
      END IF;
  END;
BEGIN
  -- Drop children before parents to satisfy foreign-key dependencies
  drop_table('PAYMENTS');
  drop_table('ORDER_ITEMS');
  drop_table('ORDERS');
  drop_table('REVIEWS');
  drop_table('WISHLIST');
  drop_table('CART_ITEMS');
  drop_table('ADDRESSES');
  drop_table('PRODUCTS');
  drop_table('CATEGORIES');
  drop_table('CMS_PAGES');
  drop_table('USERS');
END;
/

-- Categories
CREATE TABLE CATEGORIES (
  ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NAME         VARCHAR2(255) NOT NULL UNIQUE,
  DESCRIPTION  VARCHAR2(500)
);

-- Products
CREATE TABLE PRODUCTS (
  ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NAME         VARCHAR2(255) NOT NULL,
  PRICE        NUMBER(10, 2) NOT NULL,
  DESCRIPTION  VARCHAR2(500),
  CATEGORY_ID  NUMBER,
  CONSTRAINT FK_PRODUCTS_CATEGORIES
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES (ID)
);

-- Users
CREATE TABLE USERS (
  ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  EMAIL     VARCHAR2(255) NOT NULL UNIQUE,
  PASSWORD  VARCHAR2(255) NOT NULL,
  NAME      VARCHAR2(255),
  ROLE      VARCHAR2(32) DEFAULT 'CUSTOMER' NOT NULL,
  CONSTRAINT CK_USERS_ROLE CHECK (ROLE IN ('CUSTOMER', 'SUPPORT'))
);

-- Addresses
CREATE TABLE ADDRESSES (
  ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  USER_ID     NUMBER NOT NULL,
  STREET      VARCHAR2(255) NOT NULL,
  CITY        VARCHAR2(255) NOT NULL,
  POSTAL_CODE VARCHAR2(20) NOT NULL,
  COUNTRY     VARCHAR2(100) NOT NULL,
  CONSTRAINT FK_ADDRESSES_USERS
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
);

-- Orders
CREATE TABLE ORDERS (
  ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  USER_ID    NUMBER NOT NULL,
  TOTAL      NUMBER(12, 2) NOT NULL,
  STATUS     VARCHAR2(50) NOT NULL,
  CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
  UPDATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_ORDERS_USERS
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

-- Order items
CREATE TABLE ORDER_ITEMS (
  ORDER_ID   NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY   NUMBER NOT NULL,
  PRICE      NUMBER(10, 2) NOT NULL,
  CONSTRAINT PK_ORDER_ITEMS PRIMARY KEY (ORDER_ID, PRODUCT_ID),
  CONSTRAINT FK_ORDER_ITEMS_ORDERS
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID) ON DELETE CASCADE,
  CONSTRAINT FK_ORDER_ITEMS_PRODUCTS
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

-- Cart
CREATE TABLE CART_ITEMS (
  USER_ID    NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY   NUMBER NOT NULL,
  CONSTRAINT PK_CART_ITEMS PRIMARY KEY (USER_ID, PRODUCT_ID),
  CONSTRAINT FK_CART_ITEMS_USERS
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
  CONSTRAINT FK_CART_ITEMS_PRODUCTS
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

-- Wishlist
CREATE TABLE WISHLIST (
  USER_ID    NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  CONSTRAINT PK_WISHLIST PRIMARY KEY (USER_ID, PRODUCT_ID),
  CONSTRAINT FK_WISHLIST_USERS
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE,
  CONSTRAINT FK_WISHLIST_PRODUCTS
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID)
);

-- CMS Pages
CREATE TABLE CMS_PAGES (
  ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  SLUG         VARCHAR2(150) NOT NULL UNIQUE,
  TITLE        VARCHAR2(255) NOT NULL,
  EXCERPT      VARCHAR2(500),
  BODY         CLOB NOT NULL,
  STATUS       VARCHAR2(32) DEFAULT 'DRAFT' NOT NULL,
  PUBLISHED_AT TIMESTAMP,
  UPDATED_AT   TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CREATED_AT   TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT CK_CMS_STATUS CHECK (STATUS IN ('DRAFT', 'PUBLISHED', 'ARCHIVED'))
);

-- Reviews
CREATE TABLE REVIEWS (
  ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  PRODUCT_ID  NUMBER NOT NULL,
  USER_ID     NUMBER NOT NULL,
  RATING      NUMBER NOT NULL,
  REVIEW_TEXT VARCHAR2(1000),
  CREATED_AT  TIMESTAMP DEFAULT SYSTIMESTAMP,
  UPDATED_AT  TIMESTAMP,
  CONSTRAINT FK_REVIEWS_PRODUCTS
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (ID) ON DELETE CASCADE,
  CONSTRAINT FK_REVIEWS_USERS
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID) ON DELETE CASCADE
);

-- Payments
CREATE TABLE PAYMENTS (
  ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ORDER_ID   NUMBER NOT NULL,
  AMOUNT     NUMBER(12, 2) NOT NULL,
  METHOD     VARCHAR2(50) NOT NULL,
  STATUS     VARCHAR2(50) NOT NULL,
  CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT FK_PAYMENTS_ORDERS
    FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ID) ON DELETE CASCADE
);

COMMIT;

-- Seed data ---------------------------------------------------------------
DECLARE
  v_cat_electronics NUMBER;
  v_cat_books       NUMBER;
  v_cat_clothing    NUMBER;

  v_product_laptop  NUMBER;
  v_product_phone   NUMBER;
  v_product_novel   NUMBER;

  v_user_alice      NUMBER;
  v_user_bob        NUMBER;
  v_user_support    NUMBER;

  v_page_homepage   NUMBER;

  v_order_alice     NUMBER;
  v_order_bob       NUMBER;
BEGIN
  -- Categories
  INSERT INTO CATEGORIES (NAME, DESCRIPTION)
  VALUES ('Electronics', 'Electronic devices and gadgets')
  RETURNING ID INTO v_cat_electronics;

  INSERT INTO CATEGORIES (NAME, DESCRIPTION)
  VALUES ('Books', 'Wide variety of books')
  RETURNING ID INTO v_cat_books;

  INSERT INTO CATEGORIES (NAME, DESCRIPTION)
  VALUES ('Clothing', 'Apparel and accessories')
  RETURNING ID INTO v_cat_clothing;

  -- Products
  INSERT INTO PRODUCTS (NAME, PRICE, DESCRIPTION, CATEGORY_ID)
  VALUES ('Laptop', 999.99, 'High-performance laptop', v_cat_electronics)
  RETURNING ID INTO v_product_laptop;

  INSERT INTO PRODUCTS (NAME, PRICE, DESCRIPTION, CATEGORY_ID)
  VALUES ('Smartphone', 499.99, 'Latest generation smartphone', v_cat_electronics)
  RETURNING ID INTO v_product_phone;

  INSERT INTO PRODUCTS (NAME, PRICE, DESCRIPTION, CATEGORY_ID)
  VALUES ('Novel', 19.99, 'Bestselling fiction book', v_cat_books)
  RETURNING ID INTO v_product_novel;

  -- Users
  INSERT INTO USERS (EMAIL, PASSWORD, NAME, ROLE)
  VALUES (
    'alice@example.com',
    '$2b$10$awPVh5HUGIuDVqCksoPBu.ads9SiTDszcT81BkJlymuKgkzAp9.J6',
    'Alice',
    'CUSTOMER'
  )
  RETURNING ID INTO v_user_alice;

  INSERT INTO USERS (EMAIL, PASSWORD, NAME, ROLE)
  VALUES (
    'bob@example.com',
    '$2b$10$awPVh5HUGIuDVqCksoPBu.ads9SiTDszcT81BkJlymuKgkzAp9.J6',
    'Bob',
    'CUSTOMER'
  )
  RETURNING ID INTO v_user_bob;

  INSERT INTO USERS (EMAIL, PASSWORD, NAME, ROLE)
  VALUES (
    'support@example.com',
    '$2b$10$awPVh5HUGIuDVqCksoPBu.ads9SiTDszcT81BkJlymuKgkzAp9.J6',
    'Support Agent',
    'SUPPORT'
  )
  RETURNING ID INTO v_user_support;

  -- Addresses
  INSERT INTO ADDRESSES (USER_ID, STREET, CITY, POSTAL_CODE, COUNTRY)
  VALUES (v_user_alice, '123 Market Street', 'San Francisco', '94105', 'USA');

  INSERT INTO ADDRESSES (USER_ID, STREET, CITY, POSTAL_CODE, COUNTRY)
  VALUES (v_user_alice, '85 3rd Avenue', 'New York', '10003', 'USA');

  INSERT INTO ADDRESSES (USER_ID, STREET, CITY, POSTAL_CODE, COUNTRY)
  VALUES (v_user_bob, '12 Baker Street', 'London', 'NW1', 'UK');

  -- Cart items
  INSERT INTO CART_ITEMS (USER_ID, PRODUCT_ID, QUANTITY)
  VALUES (v_user_alice, v_product_laptop, 1);

  INSERT INTO CART_ITEMS (USER_ID, PRODUCT_ID, QUANTITY)
  VALUES (v_user_alice, v_product_phone, 2);

  INSERT INTO CART_ITEMS (USER_ID, PRODUCT_ID, QUANTITY)
  VALUES (v_user_bob, v_product_novel, 1);

  -- Wishlist
  INSERT INTO WISHLIST (USER_ID, PRODUCT_ID)
  VALUES (v_user_alice, v_product_novel);

  INSERT INTO WISHLIST (USER_ID, PRODUCT_ID)
  VALUES (v_user_bob, v_product_laptop);

  -- CMS Pages
  INSERT INTO CMS_PAGES (SLUG, TITLE, EXCERPT, BODY, STATUS, PUBLISHED_AT)
  VALUES (
    'homepage',
    'Homepage',
    'Dynamic landing configuration for ShopX.',
    '<h2>ShopX â€“ Tech + Design</h2><p>This content is managed through the CMS for the homepage. Update it from the admin portal to highlight campaigns, banners, and collections.</p><ul><li>Configurable landing blocks</li><li>Promotional highlights</li><li>Multiple calls to action</li></ul>',
    'PUBLISHED',
    SYSTIMESTAMP
  )
  RETURNING ID INTO v_page_homepage;

  INSERT INTO CMS_PAGES (SLUG, TITLE, EXCERPT, BODY, STATUS)
  VALUES (
    'about-us',
    'About ShopX',
    'Who we are and what we stand for.',
    '<p>ShopX is a complete e-commerce platform, ready for personalization and scale.</p>',
    'DRAFT'
  );

  -- Reviews
  INSERT INTO REVIEWS (PRODUCT_ID, USER_ID, RATING, REVIEW_TEXT)
  VALUES (v_product_laptop, v_user_alice, 5, 'Outstanding laptop for productivity work.');

  INSERT INTO REVIEWS (PRODUCT_ID, USER_ID, RATING, REVIEW_TEXT)
  VALUES (v_product_phone, v_user_bob, 4, 'Solid phone with great battery life.');

  INSERT INTO REVIEWS (PRODUCT_ID, USER_ID, RATING, REVIEW_TEXT)
  VALUES (v_product_novel, v_user_alice, 5, 'Could not put this novel down.');

  -- Orders & payments
  INSERT INTO ORDERS (USER_ID, TOTAL, STATUS, CREATED_AT, UPDATED_AT)
  VALUES (v_user_alice, 1499.98, 'PENDING', SYSTIMESTAMP - 5, SYSTIMESTAMP - 5)
  RETURNING ID INTO v_order_alice;

  INSERT INTO ORDER_ITEMS (ORDER_ID, PRODUCT_ID, QUANTITY, PRICE)
  VALUES (v_order_alice, v_product_laptop, 1, 999.99);

  INSERT INTO ORDER_ITEMS (ORDER_ID, PRODUCT_ID, QUANTITY, PRICE)
  VALUES (v_order_alice, v_product_phone, 1, 499.99);

  INSERT INTO PAYMENTS (ORDER_ID, AMOUNT, METHOD, STATUS, CREATED_AT)
  VALUES (v_order_alice, 1499.98, 'CARD', 'AUTHORIZED', SYSTIMESTAMP - 4);

  INSERT INTO ORDERS (USER_ID, TOTAL, STATUS, CREATED_AT, UPDATED_AT)
  VALUES (v_user_bob, 19.99, 'SHIPPED', SYSTIMESTAMP - 2, SYSTIMESTAMP - 1)
  RETURNING ID INTO v_order_bob;

  INSERT INTO ORDER_ITEMS (ORDER_ID, PRODUCT_ID, QUANTITY, PRICE)
  VALUES (v_order_bob, v_product_novel, 1, 19.99);

  INSERT INTO PAYMENTS (ORDER_ID, AMOUNT, METHOD, STATUS, CREATED_AT)
  VALUES (v_order_bob, 19.99, 'CARD', 'CAPTURED', SYSTIMESTAMP - 1.5);
END;
/

COMMIT;

SET DEFINE ON;
